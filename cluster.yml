---
- hosts: localhost
  gather_facts: False
  roles:
    - bastion-ssh-config
  tags: [localhost, bastion]

- hosts: k8s-cluster:etcd:calico-rr
  any_errors_fatal: true
  gather_facts: false
  vars:
    # Need to disable pipelining for bootstrap-os as some systems have requiretty in sudoers set, which makes pipelining
    # fail. bootstrap-os fixes this on these systems, so in later plays it can be enabled.
    ansible_ssh_pipelining: false
  roles:
    - bootstrap-os
  tags:
    - bootstrap-os

- hosts: k8s-cluster:etcd:calico-rr
  any_errors_fatal: true
  vars:
    ansible_ssh_pipelining: true
  gather_facts: true

- hosts: k8s-cluster:etcd:calico-rr
  any_errors_fatal: true
  roles:
    - { role: kernel-upgrade, tags: kernel-upgrade, when: kernel_upgrade is defined and kernel_upgrade }
    - { role: kubernetes/preinstall, tags: preinstall }
    - { role: docker, tags: docker }
    - { role: rkt, tags: rkt, when: "'rkt' in [ etcd_deployment_type, kubelet_deployment_type ]" }

- hosts: etcd:!k8s-cluster
  any_errors_fatal: true
  roles:
    - { role: etcd, tags: etcd }

- hosts: k8s-cluster
  any_errors_fatal: true
  roles:
    - { role: etcd, tags: etcd }
    - { role: kubernetes/node, tags: node }
    - { role: network_plugin, tags: network }

- hosts: kube-master
  any_errors_fatal: true
  roles:
    - { role: kubernetes/master, tags: master }
    - { role: kubernetes-apps/network_plugin, tags: network }

- hosts: calico-rr
  any_errors_fatal: true
  roles:
    - { role: network_plugin/calico/rr, tags: network }

- hosts: k8s-cluster
  any_errors_fatal: true
  roles:
    - { role: dnsmasq, when: "dns_mode == 'dnsmasq_kubedns'", tags: dnsmasq }
    - { role: kubernetes/preinstall, when: "dns_mode != 'none' and resolvconf_mode == 'host_resolvconf'", tags: resolvconf }

- hosts: kube-master[0]
  any_errors_fatal: true
  roles:
    - { role: kubernetes-apps, tags: apps }
